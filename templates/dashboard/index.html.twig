<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    
    <!-- Ant Design CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/antd/4.24.6/antd.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://js.pusher.com/7.0/pusher.min.js"></script>
    <style>
        body { font-family: Arial, sans-serif; background-color: #f0f2f5; margin: 0; }
        .dashboard-container { display: flex; height: 100vh; }
        .sidebar { width: 250px; background: #001529; color: white; padding: 20px; display: flex; flex-direction: column; }
        .sidebar h2 { text-align: center; margin-bottom: 20px; color: #ffffff; }
        .sidebar a { color: white; text-decoration: none; display: block; padding: 12px; border-radius: 4px; transition: background 0.3s; }
        .sidebar a:hover { background: #1890ff; }
        .content { flex: 1; padding: 20px; background: white; }
        .stat-container { display: flex; flex-wrap: wrap; gap: 20px; margin-top: 20px; }
        .stat-card { flex: 1; min-width: 250px; background: white; padding: 20px; border-radius: 8px; box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1); text-align: center; }
        .stat-card h3 { margin: 0; color: #1890ff; }
        .stat-card p { font-size: 24px; font-weight: bold; margin: 10px 0 0; }
        .charts-container { display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px; margin-top: 20px; }
        .chart-box { background: white; padding: 15px; border-radius: 8px; box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1); text-align: center; }
        .chart-title { font-size: 16px; font-weight: bold; margin-bottom: 10px; color: #333; }
    </style>
</head>
<body>

<div class="dashboard-container">

    <!-- Sidebar -->
    <div class="sidebar">
        <h2>📂 Menu</h2>
        {% set entities = {
            '🔙 Retour Accueil': 'app_home',
            '🏠 Dashboard': 'dashboard',
            '👤 Utilisateurs': 'user_index',
            '📦 Produits': 'product_index',
            '📜 Commandes': 'order_index',
            '📂 Catégories': 'category_index',
            '⭐ Avis': 'review_index',
            '🔙 Déconnecter': 'logout'

        } %}
        {% for name, route in entities %}
            <a href="{{ path(route) }}">{{ name }}</a>
        {% endfor %}
    </div>
    <div class="content">
        <h1>Bienvenue sur le Dashboard</h1>
<div style="display: flex; align-items: center; justify-content: space-between; margin-bottom: 20px;">
    <button id="notifButton" class="ant-btn ant-btn-primary">
        🔔 Notifications (<span id="notifCount">0</span>)
    </button>
    <div id="notifDropdown" class="ant-dropdown-menu" style="display: none; position: absolute; background: white; border-radius: 5px; box-shadow: 0 2px 4px rgba(0,0,0,0.2); padding: 10px; width: 250px;">
        <ul id="notifList" style="list-style: none; padding: 0; margin: 0;"></ul>
        <button id="markAsReadButton" class="ant-btn ant-btn-danger" style="width: 100%; margin-top: 10px;">Marquer comme lues</button>
    </div>
</div>
        {% block body %}
        <div class="stat-container">
            <div class="stat-card">
                <h3>👤 Total Utilisateurs</h3>
                <p>{{ totalUsers }}</p>
            </div>
            <div class="stat-card">
                <h3>📦 Total Produits</h3>
                <p>{{ totalProducts }}</p>
            </div>
            <div class="stat-card">
                <h3>📜 Total Commandes</h3>
                <p>{{ totalOrders }}</p>
            </div>
            <div class="stat-card">
                <h3>⭐ Total Avis</h3>
                <p>{{ totalReviews }}</p>
            </div>
        </div>
        <div class="charts-container">
            <div class="chart-box">
                <div class="chart-title">📈 Croissance des Utilisateurs</div>
                <canvas id="usersChart"></canvas>
            </div>
            <div class="chart-box">
                <div class="chart-title">📦 Répartition des Commandes</div>
                <canvas id="ordersChart"></canvas>
            </div>
            <div class="chart-box">
                <div class="chart-title">📊 Produits par Catégorie</div>
                <canvas id="productsChart"></canvas>
            </div>
            <div class="chart-box">
                <div class="chart-title">⭐ Avis par Produit</div>
                <canvas id="reviewsChart"></canvas>
            </div>
            <div class="chart-box">
                <div class="chart-title">💰 Revenus par Mois</div>
                <canvas id="revenuesChart"></canvas>
            </div>
           
        </div>
        {% endblock %}
    </div>
</div>
  
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // 1️⃣ Graphique Croissance des Utilisateurs
        let userGrowthData = JSON.parse('{{ userGrowth|raw }}');
        new Chart(document.getElementById('usersChart'), {
            type: 'line',
            data: {
                labels: userGrowthData.map(item => item.month),
                datasets: [{
                    label: 'Nouveaux Utilisateurs',
                    data: userGrowthData.map(item => item.count),
                    borderColor: '#1890ff',
                    backgroundColor: 'rgba(24, 144, 255, 0.2)',
                    fill: true
                }]
            }
        });

        // 2️⃣ Graphique Commandes par Statut
        let orderData = JSON.parse('{{ orderStatusCounts|raw }}');
        new Chart(document.getElementById('ordersChart'), {
            type: 'bar',
            data: {
                labels: orderData.map(item => item.status),
                datasets: [{
                    label: 'Commandes',
                    data: orderData.map(item => item.count),
                    backgroundColor: ['#FFCC00', '#FF5733', '#28A745', '#007BFF']
                }]
            }
        });

        // 3️⃣ Graphique Produits par Catégorie
        let productData = JSON.parse('{{ productsByCategory|raw }}');
        new Chart(document.getElementById('productsChart'), {
            type: 'doughnut',
            data: {
                labels: productData.map(item => item.category),
                datasets: [{
                    data: productData.map(item => item.count),
                    backgroundColor: ['#FF5733', '#007BFF', '#28A745', '#FFCC00']
                }]
            }
        });

         const reviewData = {{ reviewCounts|raw }};

    const labels = [];
    const data = [];
    const colors = ['#FF5733', '#28A745', '#007BFF', '#FFC107', '#6F42C1', '#17A2B8']; // Couleurs aléatoires

    reviewData.forEach((item, index) => {
        labels.push(item.productName);
        data.push(item.reviewCount);
    });

    new Chart(document.getElementById('reviewsChart'), {
        type: 'polarArea',
        data: {
            labels: labels,
            datasets: [{
                data: data,
                backgroundColor: colors.slice(0, labels.length)
            }]
        }
    });
    const revenuesData = {{ monthlyRevenues|raw }};
    const labels2 = [];
    const data2 = [];
    revenuesData.forEach(item => {
        labels2.push(["Jan", "Fév", "Mar", "Avr", "Mai", "Juin", "Juil", "Août", "Sep", "Oct", "Nov", "Déc"][item.month - 1]);
        data2.push(item.revenue);
    });

    new Chart(document.getElementById('revenuesChart'), {
        type: 'line',
        data: {
            labels: labels2,
            datasets: [{
                label: 'Revenus (€)',
                data: data2,
                borderColor: '#FF5733',
                fill: false
            }]
        }
    });


     
    });

</script>

</body>
</html>
